


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Sets, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         
    6 00000000         start
    7 00000000 E59F30C0        LDR              R3, = AElems 
                                                            ;Load elements of A
                                                            
    8 00000004 E59F40C0        LDR              R4, = BElems 
                                                            ;Load elements of B
                                                            
    9 00000008 E59F50C0        LDR              R5, = CElems 
                                                            ;Load elements of C
                                                            
   10 0000000C E59F00C0        LDR              R0, = ASize ;Load size of A for
                                                             (Count 1)
   11 00000010 E5900000        LDR              R0, [R0]
   12 00000014 E59F10BC        LDR              R1, = BSize ;Load size of B for
                                                             (Count 2)
   13 00000018 E5911000        LDR              R1, [R1]
   14 0000001C E59F20B8        LDR              R2, = CSize ;Load size of C
   15 00000020 E5922000        LDR              R2, [R2]
   16 00000024 E3A08021        LDR              R8, = '!'
   17 00000028         
   18 00000028         while
   19 00000028 E3500000        CMP              R0,#0       ;If Count 1 !=0, co
                                                            ntinue loop.
   20 0000002C 0A000016        BEQ              endwh1      ;If Count 1 =0, bra
                                                            nch to second loop.
                                                            
   21 00000030 E5947000        LDR              R7, [R4]    ;Load element of B 
                                                            into R7.
   22 00000034 E5936000        LDR              R6, [R3]    ;Load element of A 
                                                            into R6.
   23 00000038 E1560007        CMP              R6,R7       ;Compare one elemen
                                                            t of A with one of 
                                                            B.
   24 0000003C 1A000004        BNE              notSame     ;If not same branch
                                                            .
   25 00000040 E5838000        STR              R8, [R3]    ;If there is a matc
                                                            h store '!' for bot
                                                            h
   26 00000044 E5848000        STR              R8, [R4]    ;
   27 00000048 E2833004        ADD              R3,R3,#4    ;Next element
   28 0000004C E2400001        SUB              R0,R0,#1    ;Subtract one from 
                                                            Count 1
   29 00000050 EAFFFFF4        B                while
   30 00000054         
   31 00000054         notSame
   32 00000054 E3510000        CMP              R1,#0       ;Check if Count 2 i
                                                            s 0
   33 00000058 0A000002        BEQ              checkedAll  ;If checked all ele
                                                            ments of B, branch 
                                                            to checked all to s
                                                            tore in C.
   34 0000005C E2411001        SUB              R1,R1,#1    ;If !=0, subtract o
                                                            ne from Count 2
   35 00000060 E2844004        ADD              R4,R4,#4    ;Next element



ARM Macro Assembler    Page 2 


   36 00000064 EAFFFFEF        B                while
   37 00000068         
   38 00000068         checkedAll
   39 00000068 E5856000        STR              R6,   [R5]  ;Store element in C
                                                            
   40 0000006C E2855004        ADD              R5,R5,#4    ;Next element
   41 00000070 E2833004        ADD              R3,R3,#4    ;Next element
   42 00000074 E2822001        ADD              R2,R2,#1    ;Add one to size of
                                                             C
   43 00000078 E2400001        SUB              R0,R0,#1    ;Subtract 1 from Co
                                                            unt 1
   44 0000007C E59F1054        LDR              R1, = BSize ;Reload size of B i
                                                            nto R1
   45 00000080 E59F4044        LDR              R4, = BElems ;Reload elements o
                                                            f B into R4
   46 00000084 E5911000        LDR              R1, [R1]    ;
   47 00000088 EAFFFFE6        B                while
   48 0000008C         
   49 0000008C         endwh1
   50 0000008C         
   51 0000008C         while2
   52 0000008C E3510000        CMP              R1,#0
   53 00000090 0A00000B        BEQ              endwh       ;If Count 2 (BSize)
                                                             is also 0, termina
                                                            te program.
   54 00000094 E5947000        LDR              R7, [R4]    ;Otherwise, load el
                                                            ements of B into R7
                                                            
   55 00000098 E3570021        CMP              R7,#'!'     ;Compare to '!'
   56 0000009C 0A000005        BEQ              next        ;If equal, check ne
                                                            xt digit
   57 000000A0 E5857000        STR              R7, [R5]    ;Otherwise, store i
                                                            n C
   58 000000A4 E2855004        ADD              R5,R5,#4    ;Next digit
   59 000000A8 E2844004        ADD              R4,R4,#4    ;Next digit
   60 000000AC E2822001        ADD              R2,R2,#1    ;Increase size of C
                                                             by 1
   61 000000B0 E2411001        SUB              R1,R1,#1    ;Decrease size of B
                                                             (Count 2) by 1
   62 000000B4 EAFFFFF4        B                while2
   63 000000B8         
   64 000000B8         next
   65 000000B8 E2844004        ADD              R4,R4,#4    ;Next digit
   66 000000BC E2411001        SUB              R1,R1,#1    ;Decrease Count 2 b
                                                            y 1
   67 000000C0 EAFFFFF1        B                while2
   68 000000C4         
   69 000000C4         endwh
   70 000000C4         
   71 000000C4         
   72 000000C4 EAFFFFFE 
                       stop    B                stop
   73 000000C8         
   74 000000C8         
   75 000000C8 00000000 
              00000000 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 3 


              00000000 
              00000000 
              00000000         AREA             TestData, DATA, READWRITE
   76 00000000         
   77 00000000 00000008 
                       ASize   DCD              8           ; Number of element
                                                            s in A
   78 00000004 00000004 
              00000006 
              00000002 
              0000000D 
              00000013 
              00000007 
              00000001 
              00000003 AElems  DCD              4,6,2,13,19,7,1,3 
                                                            ; Elements of A
   79 00000024         
   80 00000024 00000006 
                       BSize   DCD              6           ; Number of element
                                                            s in B
   81 00000028 0000000D 
              00000009 
              00000001 
              00000014 
              00000005 
              00000008 BElems  DCD              13,9,1,20,5,8 ; Elements of B
   82 00000040         
   83 00000040 00000000 
                       CSize   DCD              0           ; Number of element
                                                            s in C
   84 00000044 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    CElems  SPACE            56          ; Elements of C
   85 0000007C         
   86 0000007C                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\s
ets.d -o.\sets.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\
Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SET
A 1" --predefine="__UVISION_VERSION SETA 524" --predefine="NO_CLOCK_SETUP SETA 
1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA 1" --predefin
e="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\sets.lst Sets.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Sets 00000000

Symbol: Sets
   Definitions
      At line 1 in file Sets.s
   Uses
      None
Comment: Sets unused
checkedAll 00000068

Symbol: checkedAll
   Definitions
      At line 38 in file Sets.s
   Uses
      At line 33 in file Sets.s
Comment: checkedAll used once
endwh 000000C4

Symbol: endwh
   Definitions
      At line 69 in file Sets.s
   Uses
      At line 53 in file Sets.s
Comment: endwh used once
endwh1 0000008C

Symbol: endwh1
   Definitions
      At line 49 in file Sets.s
   Uses
      At line 20 in file Sets.s
Comment: endwh1 used once
next 000000B8

Symbol: next
   Definitions
      At line 64 in file Sets.s
   Uses
      At line 56 in file Sets.s
Comment: next used once
notSame 00000054

Symbol: notSame
   Definitions
      At line 31 in file Sets.s
   Uses
      At line 24 in file Sets.s
Comment: notSame used once
start 00000000

Symbol: start
   Definitions
      At line 6 in file Sets.s
   Uses
      At line 3 in file Sets.s
Comment: start used once
stop 000000C4

Symbol: stop



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 72 in file Sets.s
   Uses
      At line 72 in file Sets.s
Comment: stop used once
while 00000028

Symbol: while
   Definitions
      At line 18 in file Sets.s
   Uses
      At line 29 in file Sets.s
      At line 36 in file Sets.s
      At line 47 in file Sets.s

while2 0000008C

Symbol: while2
   Definitions
      At line 51 in file Sets.s
   Uses
      At line 62 in file Sets.s
      At line 67 in file Sets.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AElems 00000004

Symbol: AElems
   Definitions
      At line 78 in file Sets.s
   Uses
      At line 7 in file Sets.s
Comment: AElems used once
ASize 00000000

Symbol: ASize
   Definitions
      At line 77 in file Sets.s
   Uses
      At line 10 in file Sets.s
Comment: ASize used once
BElems 00000028

Symbol: BElems
   Definitions
      At line 81 in file Sets.s
   Uses
      At line 8 in file Sets.s
      At line 45 in file Sets.s

BSize 00000024

Symbol: BSize
   Definitions
      At line 80 in file Sets.s
   Uses
      At line 12 in file Sets.s
      At line 44 in file Sets.s

CElems 00000044

Symbol: CElems
   Definitions
      At line 84 in file Sets.s
   Uses
      At line 9 in file Sets.s
Comment: CElems used once
CSize 00000040

Symbol: CSize
   Definitions
      At line 83 in file Sets.s
   Uses
      At line 14 in file Sets.s
Comment: CSize used once
TestData 00000000

Symbol: TestData
   Definitions
      At line 75 in file Sets.s
   Uses
      None
Comment: TestData unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file Sets.s
   Uses
      None
Comment: main unused
1 symbol
358 symbols in table
